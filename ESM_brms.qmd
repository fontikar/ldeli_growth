---
title: "Electronic supplementary materials for: Heritability and developmental plasticity of growth in an oviparous lizard Pedigree and genomic relatedness"
author: "Fonti Kar"
date: "`r Sys.Date()`"
docx:
editor_options: 
  chunk_output_type: console
execute:
  freeze: auto  # re-render only when source changes
  cache: false
  echo: false
  warning: false
  error: false
  include: true
crossref:
  fig-title: 'Figure'
  fig-labels: arabic
  title-delim: "-"
  fig-prefix: "Figure"
  tbl-prefix: "Table"
---

**This document contains all the code, figures and tables for the manuscript "Heritability and developmental plasticity of growth in an oviparous lizard: Pedigree and genomic relatedness". These should reproduce those found in the Electronic Supplementary Material (ESM) of the manuscript.**

```{r setup, include=FALSE, eval = T, echo = FALSE, warning = FALSE}
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
sessionInfo()

# R version 3.6.1 (2019-07-05)
# Platform: x86_64-apple-darwin15.6.0 (64-bit)
# Running under: macOS High Sierra 10.13.6

pacman::p_load(dplyr, magrittr, ggplot2, patchwork, lubridate, stringr, tidyr, MCMCglmm, bookdown, pander, brms, latex2exp, janitor, flextable, readxl, writexl)

#Read in dataset
#Complete
data <- read.csv("./data/growth/processed/analysis/Ldeli_quangen_growth.csv", stringsAsFactors = F)

#Augmented
data_DA <- read.csv("./data/growth/processed/analysis/Ldeli_quangen_growth_DA.csv", stringsAsFactors = F)

# Dataset
cold_DA <- read.csv("data/growth/processed/analysis/COLD_quangen_growth_DA.csv", stringsAsFactors = F)

source("./R/Analysis/functions.R")
load("./output/kfold/kfold.RData") # Reloads the kfold models for model selection

#ggplot theme
my_theme <- theme(#legend.position = "none",
  legend.position = "bottom",
  legend.text =element_text(size = 14),
  legend.title =element_text(size = 14, face = "bold"),
  panel.grid.major = element_blank(), 
  panel.grid.minor = element_blank(),
  axis.text=element_text(size=16),
  axis.title=element_text(size=16,face="bold"),
  plot.title = element_text(size = 20, face = "bold", hjust = 0.5))
```

## Pedigree statistics across treatments

```{r}
# pedigree_stats
  pedigree_stats <- data %>% group_by(treatment, dam_id, sire_id)  %>% summarise(n_offspring = length(unique(F1_Genotype))) %>% as.data.frame()

# Number of maternal half sibs
  pedigree_stats_mat <- data %>% group_by(treatment, dam_id)  %>% summarise(n_sire = length(unique(sire_id))) %>% as.data.frame()

  # Averge number of sires per dam
      mean_sire <- mean(pedigree_stats_mat$n_sire)
        sd_sire <- sd(pedigree_stats_mat$n_sire)
        range <- range(pedigree_stats_mat$n_sire)
        one_only_mom <- (sum(pedigree_stats_mat$n_sire == 1) / nrow(pedigree_stats_mat))*100

# Number of paternal half sibs
  pedigree_stats_pat <- data %>% group_by(treatment, sire_id)  %>% summarise(n_mom = length(unique(dam_id))) %>% as.data.frame()

  # Averge number of dams per sire
      mean_dam <- mean(pedigree_stats_pat$n_mom)
        sd_dam <- sd(pedigree_stats_pat$n_mom)
        range_dam <- range(pedigree_stats_pat$n_mom)
        one_only_dad <- (sum(pedigree_stats_pat$n_mom == 1) / nrow(pedigree_stats_pat))*100
  
```

Of the `r nrow(pedigree_stats_mat)` females in the dataset `r one_only_mom`% (`r sum(pedigree_stats_mat$n_sire == 1)` of `r nrow(pedigree_stats_mat)`) had been sired by a single male. The average number of sires per dam was `r round(mean_sire, 2)` (SD = `r round(sd_sire, 2)`). The range of sires per dam was `r range[1]` to `r range[2]`.

Of the `r nrow(pedigree_stats_pat)` females in the dataset `r one_only_dad`% (`r sum(pedigree_stats_pat$n_sire == 1)` of `r nrow(pedigree_stats_pat)`) had been sired by a single male. The average number of sires per dam was `r round(mean_dam, 2)` (SD = `r round(sd_dam, 2)`). The range of sires per dam was `r range_dam[1]` to `r range_dam[2]`.

```{r}
#| label: tbl-tb1
#| tbl-cap: "Pedigree statistics for each treatment. The number of offspring and sires per dam (clutch) are provided for 23 and 29 C treatments. 'w' indicates a male not present within the breeding design resulting from mating or stored sperm from wild interactions."

pedigree_stats <- pedigree_stats  %>% 
                  rename(           "Treatment" = treatment,
                                       "Dam ID" = dam_id,
                                      "Sire ID" = sire_id,
                          "Number of Offspring" = n_offspring)

flextable(pedigree_stats)  %>% align(align = "center", part = "all") %>% autofit()
```

## Model fitting and selection of random effects structure

```{r, model_select, eval = FALSE, echo = FALSE, warning = FALSE, include = FALSE}
########################
### Load data 
### with Detailed Model Names
########################
  # Bring data file with details of models 
     model_names <- read_xlsx("models_table.xlsx", sheet = "model structure", skip = 2)
    Names_Models <- model_names[,c("Model Name", "Name Detail")]

########################
## Full data
########################
  # What model numbers?
    mod_nums <- seq(1,16, 1)

  #Read in models
           models <- lapply(mod_nums, function(x) readRDS(paste0("./output/rds/brm_", x)))
    names(models) <- paste0("mod_", mod_nums)

  # R2 of models
         r2_table <- plyr::ldply(lapply(models, function(x) bayes_R2(x)))
         r2_table <- left_join(r2_table, Names_Models, by = c(".id" = "Model Name"))
         r2_table <- r2_table %>% select("Name Detail", "Estimate", "Q2.5", "Q97.5")

  # waic
        waic_table <- lapply(models, function(x) waic(x))
   waic_table_comp <- data.frame(loo_compare(waic_table))
waic_table_comp$id <- row.names(waic_table_comp)
   waic_table_comp <- left_join(waic_table_comp, Names_Models, by = c("id" = "Model Name"))
   waic_table_comp <- waic_table_comp %>% select("Name Detail", "waic", "elpd_diff", "se_diff")

  # loo - sensitivity analysis
        loo_table <- lapply(models, function(x) loo(x, moment_match = TRUE))
   loo_table_comp <- data.frame(loo_compare(loo_table))
   loo_table_comp$id <- row.names(loo_table_comp)
   loo_table_comp <- left_join(loo_table_comp, Names_Models, by = c("id" = "Model Name"))
   loo_table_comp <- loo_table_comp %>% select("Name Detail", "looic", "elpd_diff", "se_diff")

  # Lets write all these results to a table
  write_xlsx(list(  r2_all = r2_table,
                  waic_all = waic_table_comp, 
                   loo_all = loo_table_comp), path = "./output/tables/fulldata/models_results.xlsx")

########################
## Cold data
########################
  # What model numbers?
    mod_nums <- seq(1,16, 1)
  
  #Read in models
           models_cold <- lapply(mod_nums, function(x) readRDS(paste0("./output/rds/brm_", x, "_cold")))
    names(models_cold) <- paste0("mod_", mod_nums)

  # R2 of models_cold
         r2_table_cold <- plyr::ldply(lapply(models_cold, function(x) bayes_R2(x)))
         r2_table_cold <- left_join(r2_table_cold, Names_Models, by = c(".id" = "Model Name"))
         r2_table_cold <- r2_table_cold %>% select("Name Detail", "Estimate", "Q2.5", "Q97.5")
  
  # waic
          waic_table_cold <- lapply(models_cold, function(x) waic(x))
     waic_table_comp_cold <- data.frame(loo_compare(waic_table_cold))
  waic_table_comp_cold$id <- row.names(waic_table_comp_cold)
     waic_table_comp_cold <- left_join(waic_table_comp_cold, Names_Models, by = c("id" = "Model Name"))
     waic_table_comp_cold <- waic_table_comp_cold %>% select("Name Detail", "waic", "elpd_diff", "se_diff")

  # loo
            loo_table_cold <- lapply(models_cold, function(x) loo(x, moment_match = TRUE))
       loo_table_comp_cold <- data.frame(loo_compare(loo_table_cold))
    loo_table_comp_cold$id <- row.names(loo_table_comp_cold)
       loo_table_comp_cold <- left_join(loo_table_comp_cold, Names_Models, by = c("id" = "Model Name"))
       loo_table_comp_cold <- loo_table_comp_cold %>% select("Name Detail", "looic", "elpd_diff", "se_diff")

  # Lets write all these results to a table
  write_xlsx(list(  r2_cold = r2_table_cold,
                  waic_cold = waic_table_comp_cold, 
                   loo_cold = loo_table_comp_cold), path = "./output/tables/cold/models_results_cold.xlsx")


########################
## Hot data
########################
  # What model numbers?
    mod_nums <- seq(1,16, 1)
  
  #Read in models
           models_hot <- lapply(mod_nums, function(x) readRDS(paste0("./output/rds/brm_", x, "_hot")))
    names(models_hot) <- paste0("mod_", mod_nums)

  # R2 of models_hot
         r2_table_hot <- plyr::ldply(lapply(models_hot, function(x) bayes_R2(x)))
         r2_table_hot <- left_join(r2_table_hot, Names_Models, by = c(".id" = "Model Name"))
         r2_table_hot <- r2_table_hot %>% select("Name Detail", "Estimate", "Q2.5", "Q97.5")

  # waic
       waic_table_hot <- lapply(models_hot, function(x) waic(x))
  waic_table_comp_hot <- data.frame(loo_compare(waic_table_hot))
  waic_table_comp_hot$id <- row.names(waic_table_comp_hot)
  waic_table_comp_hot <- left_join(waic_table_comp_hot, Names_Models, by = c("id" = "Model Name"))
  waic_table_comp_hot <- waic_table_comp_hot %>% select("Name Detail", "waic", "elpd_diff", "se_diff")

  # loo
        loo_table_hot <- lapply(models_hot, function(x) loo(x, moment_match = TRUE))
   loo_table_comp_hot <- data.frame(loo_compare(loo_table_hot))
    loo_table_comp_hot$id <- row.names(loo_table_comp_hot)
    loo_table_comp_hot <- left_join(loo_table_comp_hot, Names_Models, by = c("id" = "Model Name"))
    loo_table_comp_hot <- loo_table_comp_hot %>% select("Name Detail", "looic", "elpd_diff", "se_diff")

  # Lets write all these results to a table
  write_xlsx(list(  r2_hot = r2_table_hot,
                  waic_hot = waic_table_comp_hot, 
                   loo_hot = loo_table_comp_hot), path = "./output/tables/hot/models_results_hot.xlsx")
```

```{r, echo = FALSE}
#| label: tbl-random_waic
#| tbl-cap: Comparisons of wAIC values for seven models with different combinations of random effects structures for additive genetic variance, maternal variance and permanent environmental variance

# Load in the tables
  tableDA_waic <- read_xlsx("./output/tables/fulldata/models_results.xlsx", sheet = "waic_all") %>% select(-...5)
   tableDA_loo <- read_xlsx("./output/tables/fulldata/models_results.xlsx", sheet = "loo_all") %>% select(-...5)

# Combined DA Table
  tableDA <- left_join(tableDA_waic, tableDA_loo, by = c("Name Detail" = "Name Detail"), suffix = c(".waic", ".loo"))  %>% 
              rename(          "WAIC" = waic,
                  "Delta_ELPD (WAIC)" = elpd_diff.waic,
                     "SE ELPD (WAIC)" = se_diff.waic,
                                "LOO" = looic,
                  "Delta_ELPD (LOO)" = elpd_diff.loo,
                     "SE ELPD (LOO)" = se_diff.loo)


# Print out Table
  flextable(tableDA)  %>% align(align = "center", part = "all") %>% autofit()

```

## Does our data have heterogenous residual variance?

```{r, eval = FALSE, echo = FALSE, warning = FALSE, include = FALSE}
         mod_12 <- readRDS("./output/rds/brm_12") #Homo. Top supported model 5.5
     brm_12_het <- readRDS("./output/rds/brm_12_het") #Hetero 5.6

# Lets have a look at model fit. 
par(mfrow = c(2,2))
brms_model_check(mod_12, main = "Homogenous residual variance")
brms_model_check(brm_12_het, main = "Heterogeneous residual variance")
 
#Compare
          ics <- loo(mod_12,  "loo", moment_match = TRUE)
          ic2 <- loo(brm_12_het,  "loo", moment_match = TRUE)
loo_het_table <- data.frame(loo_compare(ics, ic2))
loo_het_table$id <- c("Heterogeneous", "Homogeneous")

       icswaic <- waic(mod_12)
       ic2waic <- waic(brm_12_het)
waic_het_table <- data.frame(loo_compare(icswaic, ic2waic))
waic_het_table$id <- c("Heterogeneous", "Homogeneous")

 write_xlsx(list(  waic_het_table = waic_het_table,
                    loo_het_table = loo_het_table), path = "./output/tables/models_results_het.xlsx")

```

```{r, echo = FALSE}
#| label: tbl-brms_IC
#| tbl-cap: Comparisons of expected log predictive density values for LOO and WAIC values to test the importance of  heterogenous and homogenous residual variance. Note that difference in values are calculated by substracting values from the model with lowest LOO and WAIC values i.e. the heterogenous variance model
  table_het <- read_xlsx("./output/tables/models_results_het.xlsx", sheet = "waic_het_table")
 table_het2 <- read_xlsx("./output/tables/models_results_het.xlsx", sheet = "loo_het_table")

# Combined DA Table
  tableDA_het <- left_join(table_het, table_het2, by = c("id" = "id"), suffix = c(".waic", ".loo"))  %>% select(id, waic, elpd_diff.waic, se_diff.waic, looic, elpd_diff.loo, se_diff.loo)  %>% 
  rename(          "WAIC" = waic,
                  "Delta_ELPD (WAIC)" = elpd_diff.waic,
                     "SE ELPD (WAIC)" = se_diff.waic,
                                "LOO" = looic,
                  "Delta_ELPD (LOO)" = elpd_diff.loo,
                     "SE ELPD (LOO)" = se_diff.loo)

flextable(tableDA_het)  %>% align(align = "center", part = "all") %>% autofit()
```

## The influence of developmental temperature on additive genetic variance and maternal effects across age 

```{r, echo = FALSE, include = FALSE}
#Estimates of G, M, PE and h2 marginalised over age
#Read in intercept models
brm_10_cold <- readRDS("./output/rds/brm_10_cold")
 brm_10_hot <- readRDS("./output/rds/brm_10_hot")

#Extract VCV
brm_10_cold_post <- posterior_samples(brm_10_cold) 
brm_10_hot_post <- posterior_samples(brm_10_hot) 

#Calculate total phenotypic variance for each treatment
Hot_Pheno_intercept <- brm_10_hot_post[,"sd_F1_Genotype__Intercept"] +
  brm_10_hot_post[,"sd_dam_id__Intercept"] + 
  brm_10_hot_post[,"sigma"]

cold_Pheno_intercept <- brm_10_cold_post[,"sd_F1_Genotype__Intercept"] +
  brm_10_cold_post[,"sd_dam_id__Intercept"] + 
  brm_10_cold_post[,"sigma"]

#Convert to variance
Hot_Pheno_intercept_V <- (Hot_Pheno_intercept)^2
cold_Pheno_intercept_V <- (cold_Pheno_intercept)^2

#Create a table
hot_cold_Vcomps <- as.data.frame(matrix(ncol = 5, nrow = 8))
colnames(hot_cold_Vcomps) <- c("Treatment", "Variable", "Estimate", "Lower", "Upper")

hot_cold_Vcomps$Treatment <- rep(c("Hot", "Cold"), each =4)
hot_cold_Vcomps$Variable <-rep(c("V_additive_g", "V_maternal", "Vresidual", "h2"), 2)

#Fill in table
hot_cold_Vcomps[1,3:5] <- ((brm_10_hot_post[,"sd_F1_Genotype__Intercept"])^2 %>% posterior_summary())[-2] %>% round(3)
hot_cold_Vcomps[2,3:5] <- ((brm_10_hot_post[,"sd_dam_id__Intercept"])^2 %>% posterior_summary())[-2]%>% round(3)
hot_cold_Vcomps[3,3:5] <- ((brm_10_hot_post[,"sigma"])^2 %>% posterior_summary())[-2]%>% round(3)
hot_cold_Vcomps[4,3:5] <- ((brm_10_hot_post[,"sd_F1_Genotype__Intercept"]^2 / Hot_Pheno_intercept_V) %>% posterior_summary())[-2] %>% round(3)

hot_cold_Vcomps[5,3:5] <- ((brm_10_cold_post[,"sd_F1_Genotype__Intercept"])^2 %>% posterior_summary())[-2]%>% round(3)
hot_cold_Vcomps[6,3:5] <- ((brm_10_cold_post[,"sd_dam_id__Intercept"])^2 %>% posterior_summary())[-2]%>% round(3)
hot_cold_Vcomps[7,3:5] <- ((brm_10_cold_post[,"sigma"])^2 %>% posterior_summary())[-2]%>% round(3)
hot_cold_Vcomps[8,3:5] <- ((brm_10_cold_post[,"sd_F1_Genotype__Intercept"]^2 / cold_Pheno_intercept) %>% posterior_summary())[-2]%>% round(3)
```

```{r, echo = FALSE}
#| label: tbl-Vcomps
#| tbl-cap: Treatment comparisons of additive genetic variance, maternal variance, permanent environmental variance and heritability. These are estimated from a model where random intercepts were fitted for both accounts of lizard identity and dam identity
flextable(hot_cold_Vcomps)  %>% align(align = "center", part = "all") %>% autofit()

```


```{r, echo = FALSE, include= FALSE}
#Compiling G matrix for hot incubated lizards
#Calculate VAR from SD

brm_12_hot_het <- readRDS("./output/rds/brm_12_hot_het")

    hot_G_sd_post <- posterior_samples(brm_12_hot_het, "^sd_F1_Genotype")
   hot_G_var_post <- posterior_samples(brm_12_hot_het, "^sd_F1_Genotype")^2
hot_G_var_summary <- posterior_summary(hot_G_var_post)[,-2] %>% round(3)

#Calculate COV from COR
   hot_G_cor_post <- posterior_samples(brm_12_hot_het, "^cor_F1_Genotype")
hot_G_cor_summary <- posterior_summary(hot_G_cor_post)[,-2] %>% signif(digits = 3)

hot_G_cov_post <- cbind(hot_G_cor_post[1] * (hot_G_sd_post[1] * hot_G_sd_post[2]), 
                  hot_G_cor_post[2] * (hot_G_sd_post[1] * hot_G_sd_post[3]),
                  hot_G_cor_post[3] * (hot_G_sd_post[2] * hot_G_sd_post[3]))
names(hot_G_cov_post) <- str_replace(names(hot_G_cor_post), "cor", "cov")
hot_G_cov_summary <- posterior_summary(hot_G_cov_post)[,-2] %>% signif(digits = 3)

#Tabulating
Table_4_G <- data.frame(matrix(nrow = 3, ncol = 3))
#Names
colnames(Table_4_G) <- rownames(Table_4_G) <- c("Intercept", "Linear Slope", "Quadratic Slope")

#Fill in matrix - diagonals 
Table_4_G[1, 1] <- paste0(hot_G_var_summary[1,1], " (", hot_G_var_summary[1,2], " - ", hot_G_var_summary[1,3], ")")
Table_4_G[2, 2] <- paste0(hot_G_var_summary[2,1], " (", hot_G_var_summary[2,2], " - ", hot_G_var_summary[2,3], ")")
Table_4_G[3, 3] <- paste0(hot_G_var_summary[3,1], " (", hot_G_var_summary[3,2], " - ", hot_G_var_summary[3,3], ")")

#upper off-diagonals - covariances
Table_4_G[1, 2] <- paste0(hot_G_cov_summary[1,1], " (", hot_G_cov_summary[1,2], " - ", hot_G_cov_summary[1,3], ")")
Table_4_G[1, 3] <- paste0(hot_G_cov_summary[2,1], " (", hot_G_cov_summary[2,2], " - ", hot_G_cov_summary[2,3], ")")
Table_4_G[2, 3] <- paste0(hot_G_cov_summary[3,1], " (", hot_G_cov_summary[3,2], " - ", hot_G_cov_summary[3,3], ")")

#lower off diagonals - correlations 
Table_4_G[2, 1] <- paste0(hot_G_cor_summary[1,1], " (", hot_G_cor_summary[1,2], " - ", hot_G_cor_summary[1,3], ")")
Table_4_G[3, 1] <- paste0(hot_G_cor_summary[2,1], " (", hot_G_cor_summary[2,2], " - ", hot_G_cor_summary[2,3], ")")
Table_4_G[3, 2] <- paste0(hot_G_cor_summary[3,1], " (", hot_G_cor_summary[3,2], " - ", hot_G_cor_summary[3,3], ")")

write.csv(Table_4_G, "output/tables/Table_4_G_brms_hot.csv")
```

```{r, echo = FALSE, include= FALSE}
#Compiling M matrix for hot incubated lizards

#Calculate VAR from SD
hot_M_sd_post <- posterior_samples(brm_12_hot_het, "^sd_dam_id")
hot_M_var_post <- posterior_samples(brm_12_hot_het, "^sd_dam_id")^2
hot_M_var_summary <- posterior_summary(hot_M_var_post)[,-2] %>% round(3)

#Calculate COV from COR
hot_M_cor_post <- posterior_samples(brm_12_hot_het, "^cor_dam_id")
hot_M_cor_summary <- posterior_summary(hot_M_cor_post)[,-2] %>% signif(digits = 3)

hot_M_cov_post <- cbind(hot_M_cor_post[1] * (hot_M_sd_post[1] * hot_M_sd_post[2]), 
                  hot_M_cor_post[2] * (hot_M_sd_post[1] * hot_M_sd_post[3]),
                  hot_M_cor_post[3] * (hot_M_sd_post[2] * hot_M_sd_post[3]))
names(hot_M_cov_post) <- str_replace(names(hot_M_cor_post), "cor", "cov")
hot_M_cov_summary <- posterior_summary(hot_M_cov_post)[,-2] %>% signif(digits = 3)

#Tabulating
Table_4_M <- data.frame(matrix(nrow = 3, ncol = 3))
#Names
colnames(Table_4_M) <- rownames(Table_4_M) <- c("Intercept", "Linear Slope", "Quadratic Slope")

#Fill in matrix - diagonals 
Table_4_M[1, 1] <- paste0(hot_M_var_summary[1,1], " (", hot_M_var_summary[1,2], " - ", hot_M_var_summary[1,3], ")")
Table_4_M[2, 2] <- paste0(hot_M_var_summary[2,1], " (", hot_M_var_summary[2,2], " - ", hot_M_var_summary[2,3], ")")
Table_4_M[3, 3] <- paste0(hot_M_var_summary[3,1], " (", hot_M_var_summary[3,2], " - ", hot_M_var_summary[3,3], ")")

#upper off-diagonals - covariances
Table_4_M[1, 2] <- paste0(hot_M_cov_summary[1,1], " (", hot_M_cov_summary[1,2], " - ", hot_M_cov_summary[1,3], ")")
Table_4_M[1, 3] <- paste0(hot_M_cov_summary[2,1], " (", hot_M_cov_summary[2,2], " - ", hot_M_cov_summary[2,3], ")")
Table_4_M[2, 3] <- paste0(hot_M_cov_summary[3,1], " (", hot_M_cov_summary[3,2], " - ", hot_M_cov_summary[3,3], ")")

#lower off diagonals - correlations 
Table_4_M[2, 1] <- paste0(hot_M_cor_summary[1,1], " (", hot_M_cor_summary[1,2], " - ", hot_M_cor_summary[1,3], ")")
Table_4_M[3, 1] <- paste0(hot_M_cor_summary[2,1], " (", hot_M_cor_summary[2,2], " - ", hot_M_cor_summary[2,3], ")")
Table_4_M[3, 2] <- paste0(hot_M_cor_summary[3,1], " (", hot_M_cor_summary[3,2], " - ", hot_M_cor_summary[3,3], ")")

write.csv(Table_4_M, "output/tables/Table_4_M_brms_hot.csv")

#Residuals
  hot_e_int <- exp(posterior_samples(brm_12_hot_het, "b_sigma_I"))^2 %>% posterior_summary() %>% signif(digits = 3)
hot_e_slope <- posterior_samples(brm_12_hot_het, "b_sigma_z") %>% posterior_summary() %>% signif(digits = 3)

     Table_4_E <- data.frame(matrix(nrow = 1, ncol = 3))
Table_4_E[1,2] <- paste0(hot_e_int[,"Estimate"], " (", hot_e_int[,"Q2.5"], " - ", hot_e_int[,"Q97.5"], ")")
Table_4_E[1,3] <- paste0(hot_e_slope[,"Estimate"], " (", hot_e_slope[,"Q2.5"], " - ", hot_e_slope[,"Q97.5"], ")")
write.csv(Table_4_E, "output/tables/Table_4_E_brms_hot.csv")
```

```{r, echo = FALSE, include= FALSE}
#Compiling G matrix for cold incubated lizards

brm_12_cold_het <- readRDS("./output/rds/brm_12_cold_het")

#Calculate VAR from SD
    cold_G_sd_post <- posterior_samples(brm_12_cold_het, "^sd_F1_Genotype")
   cold_G_var_post <- posterior_samples(brm_12_cold_het, "^sd_F1_Genotype")^2
cold_G_var_summary <- posterior_summary(cold_G_var_post)[,-2] %>% round(3)

#Calculate COV from COR
   cold_G_cor_post <- posterior_samples(brm_12_cold_het, "^cor_F1_Genotype")
cold_G_cor_summary <- posterior_summary(cold_G_cor_post)[,-2] %>% signif(digits = 3)

cold_G_cov_post <- cbind(cold_G_cor_post[1] * (cold_G_sd_post[1] * cold_G_sd_post[2]), 
                  cold_G_cor_post[2] * (cold_G_sd_post[1] * cold_G_sd_post[3]),
                  cold_G_cor_post[3] * (cold_G_sd_post[2] * cold_G_sd_post[3]))
names(cold_G_cov_post) <- str_replace(names(cold_G_cor_post), "cor", "cov")
cold_G_cov_summary <- posterior_summary(cold_G_cov_post)[,-2] %>% signif(digits = 3)

#Tabulating
Table_5_G <- data.frame(matrix(nrow = 3, ncol = 3))
#Names
colnames(Table_5_G) <- rownames(Table_5_G) <- c("Intercept", "Linear Slope", "Quadratic Slope")

#Fill in matrix - diagonals 
Table_5_G[1, 1] <- paste0(cold_G_var_summary[1,1], " (", cold_G_var_summary[1,2], " - ", cold_G_var_summary[1,3], ")")
Table_5_G[2, 2] <- paste0(cold_G_var_summary[2,1], " (", cold_G_var_summary[2,2], " - ", cold_G_var_summary[2,3], ")")
Table_5_G[3, 3] <- paste0(cold_G_var_summary[3,1], " (", cold_G_var_summary[3,2], " - ", cold_G_var_summary[3,3], ")")

#upper off-diagonals - covariances
Table_5_G[1, 2] <- paste0(cold_G_cov_summary[1,1], " (", cold_G_cov_summary[1,2], " - ", cold_G_cov_summary[1,3], ")")
Table_5_G[1, 3] <- paste0(cold_G_cov_summary[2,1], " (", cold_G_cov_summary[2,2], " - ", cold_G_cov_summary[2,3], ")")
Table_5_G[2, 3] <- paste0(cold_G_cov_summary[3,1], " (", cold_G_cov_summary[3,2], " - ", cold_G_cov_summary[3,3], ")")

#lower off diagonals - correlations 
Table_5_G[2, 1] <- paste0(cold_G_cor_summary[1,1], " (", cold_G_cor_summary[1,2], " - ", cold_G_cor_summary[1,3], ")")
Table_5_G[3, 1] <- paste0(cold_G_cor_summary[2,1], " (", cold_G_cor_summary[2,2], " - ", cold_G_cor_summary[2,3], ")")
Table_5_G[3, 2] <- paste0(cold_G_cor_summary[3,1], " (", cold_G_cor_summary[3,2], " - ", cold_G_cor_summary[3,3], ")")

#write.csv(Table_5_G, "output/tables/Table_5_G_G_brms_cold.csv")
```

```{r, echo = FALSE, include= FALSE}
#Compiling M matrix for cold incubated lizards

#Calculate VAR from SD
cold_M_sd_post <- posterior_samples(brm_12_cold_het, "^sd_dam_id")
cold_M_var_post <- posterior_samples(brm_12_cold_het, "^sd_dam_id")^2
cold_M_var_summary <- posterior_summary(cold_M_var_post)[,-2] %>% round(3)

#Calculate COV from COR
cold_M_cor_post <- posterior_samples(brm_12_cold_het, "^cor_dam_id")
cold_M_cor_summary <- posterior_summary(cold_M_cor_post)[,-2] %>% signif(digits = 3)

cold_M_cov_post <- cbind(cold_M_cor_post[1] * (cold_M_sd_post[1] * cold_M_sd_post[2]), 
                  cold_M_cor_post[2] * (cold_M_sd_post[1] * cold_M_sd_post[3]),
                  cold_M_cor_post[3] * (cold_M_sd_post[2] * cold_M_sd_post[3]))
names(cold_M_cov_post) <- str_replace(names(cold_M_cor_post), "cor", "cov")
cold_M_cov_summary <- posterior_summary(cold_M_cov_post)[,-2] %>% signif(digits = 3)

#Tabulating
Table_5_M <- data.frame(matrix(nrow = 3, ncol = 3))
#Names
colnames(Table_5_M) <- rownames(Table_5_M) <- c("Intercept", "Linear Slope", "Quadratic Slope")

#Fill in matrix - diagonals 
Table_5_M[1, 1] <- paste0(cold_M_var_summary[1,1], " (", cold_M_var_summary[1,2], " - ", cold_M_var_summary[1,3], ")")
Table_5_M[2, 2] <- paste0(cold_M_var_summary[2,1], " (", cold_M_var_summary[2,2], " - ", cold_M_var_summary[2,3], ")")
Table_5_M[3, 3] <- paste0(cold_M_var_summary[3,1], " (", cold_M_var_summary[3,2], " - ", cold_M_var_summary[3,3], ")")

#upper off-diagonals - covariances
Table_5_M[1, 2] <- paste0(cold_M_cov_summary[1,1], " (", cold_M_cov_summary[1,2], " - ", cold_M_cov_summary[1,3], ")")
Table_5_M[1, 3] <- paste0(cold_M_cov_summary[2,1], " (", cold_M_cov_summary[2,2], " - ", cold_M_cov_summary[2,3], ")")
Table_5_M[2, 3] <- paste0(cold_M_cov_summary[3,1], " (", cold_M_cov_summary[3,2], " - ", cold_M_cov_summary[3,3], ")")

#lower off diagonals - correlations 
Table_5_M[2, 1] <- paste0(cold_M_cor_summary[1,1], " (", cold_M_cor_summary[1,2], " - ", cold_M_cor_summary[1,3], ")")
Table_5_M[3, 1] <- paste0(cold_M_cor_summary[2,1], " (", cold_M_cor_summary[2,2], " - ", cold_M_cor_summary[2,3], ")")
Table_5_M[3, 2] <- paste0(cold_M_cor_summary[3,1], " (", cold_M_cor_summary[3,2], " - ", cold_M_cor_summary[3,3], ")")

#write.csv(Table_5_M, "output/tables/Table_5_M_brms_cold.csv")

#Residuals
exp(posterior_samples(brm_12_cold_het, "b_sigma_I"))^2 %>% posterior_summary() %>% signif(digits = 3)
exp(posterior_samples(brm_12_cold_het, "b_sigma_z"))^2 %>% posterior_summary() %>% signif(digits = 3)
```

## Accounting for scale-effects using coefficients of variation

As the mean body mass increases over time, the variance may also increase concurrently due to scale effects and potentially bias estimates of quantitative genetics parameters (Wilson, Kruuk, et al., 2005). We therefore calculated coefficients of variation (CV) across age for each variance component using the following equation: 
$$CV_{x} = \displaystyle \frac{ 100 . V_{x}^{0.5} }{\mu_{age}}$$

where $CV_x$ is the CV for a given variance component e.g. $CV_M$ is the CV of maternal effects. The CV of maternal effects ($CV_M$) and $CV_G$ showed the same pattern as the raw variance estimates (Fig. S1-2). There were no treatment differences in $CV_G$, $CV_M$. $CV_R$ followed a quadratic relationship. Treatment differences in $CV_R$ were a lot less subtle compared to raw variance estimates and differences occured at particular ages, typically early and late in development (Fig. S2). 

```{r, echo = FALSE, include= FALSE}
#CV calculations of G M Sigma
#Read in model output
brm_12_hot_het_fixed1 <- readRDS("./output/rds/brm_12_hot_het_fixed1") 
brm_12_cold_het_fixed1 <- readRDS("./output/rds/brm_12_cold_het_fixed1") 

#Obtain CV estimates over age for hot lizards
hot_CV_G <- lapply(seq(0, 450, 30), function(x) get_CV_brms(model = brm_12_hot_het_fixed1, age = x, group_var = "F1_Genotype", data = data_DA)) %>% bind_rows()
hot_CV_M <- lapply(seq(0, 450, 30), function(x) get_CV_brms(model = brm_12_hot_het_fixed1, age = x, group_var = "dam_id", data = data_DA)) %>% bind_rows()
hot_CV_E <- lapply(seq(0, 450, 30), function(x) get_CV_brms(model = brm_12_hot_het_fixed1, age = x, group_var = "sigma", data = data_DA)) %>% bind_rows()

#Put these together
hot_CV <- bind_rows(hot_CV_G, hot_CV_M, hot_CV_E)

#Add treatment info
hot_CV$treatment <- "Hot"

#Obtain CV estimates over age for cold lizards
cold_CV_G <- lapply(seq(0, 500, 30), function(x) get_CV_brms(model = brm_12_cold_het_fixed1, age = x, group_var = "F1_Genotype", data = data_DA)) %>% bind_rows()
cold_CV_M <- lapply(seq(0, 500, 30), function(x) get_CV_brms(model = brm_12_cold_het_fixed1, age = x, group_var = "dam_id", data = data_DA)) %>% bind_rows()
cold_CV_E <- lapply(seq(0, 500, 30), function(x) get_CV_brms(model = brm_12_cold_het_fixed1, age = x, group_var = "sigma", data = data_DA)) %>% bind_rows()

#Put these together
cold_CV <- bind_rows(cold_CV_G, cold_CV_M, cold_CV_E)

#Add treatment info
cold_CV$treatment <- "Cold"

#Putting the hot and cold data together
brms_CV_compare <- bind_rows(hot_CV, cold_CV)
```

```{r, echo = FALSE, warning = FALSE, include = FALSE, message = FALSE}
#Plotting CV comparisons of variance components over age
ggplot(data = brms_CV_compare %>% filter(!group_id == "sigma"), aes(x = day, y = Estimate, colour = factor(treatment))) +
  geom_point(size = 2) + 
  #geom_errorbar(aes(min = Lower, max = Upper), width = 0, alpha = 0.5) + 
  geom_ribbon(aes(ymin = Lower, ymax = Upper), alpha = 0.05) +
  #geom_smooth(aes(ymin = Lower, ymax = Upper), stat = "identity", alpha = 0.1) +
  #geom_line() + 
  stat_smooth(method = "auto", se = F, size = 1) + 
  facet_wrap(~group_id, scales = "free_y", labeller = labeller(group_id = group_var_labs_3)) + 
  scale_x_continuous(breaks = seq(0, 500, 60)) + 
  #scale_colour_manual(values = c("#5BBCD6", "#F98400")) + 
  scale_colour_manual(values = c("#2790F3", "#F24D2A")) + 
  labs(x = "Age",
       y = "CV of Mass",
       #title = "Relative contribution of variance over age",
       colour =  "Treatment") + 
  theme_bw() + 
  my_theme +
  theme(legend.position = "none",
        strip.text = element_text(size = 18),
        strip.background = element_blank())
```


```{r}
# age
age <- seq(0, 450, 30)

#CV of h2 and m2
hot_CV_h2 <- lapply(age, function(x) get_CV_X2(model = brm_12_hot_het_fixed1, age = x, group_var = "h2", data = data_DA)) %>% bind_rows()
hot_CV_m2 <- lapply(age, function(x) get_CV_X2(model = brm_12_hot_het_fixed1, age = x, group_var = "m2", data = data_DA)) %>% bind_rows()

hot_CV_ratios <- bind_rows(hot_CV_h2, 
                           hot_CV_m2)
hot_CV_ratios$treatment <- "hot"

cold_CV_h2 <- lapply(age, function(x) get_CV_X2(model = brm_12_cold_het_fixed1, age = x, group_var = "h2", data = data_DA)) %>% bind_rows()
cold_CV_m2 <- lapply(age, function(x) get_CV_X2(model = brm_12_cold_het_fixed1, age = x, group_var = "m2", data = data_DA)) %>% bind_rows()

cold_CV_ratios <- bind_rows(cold_CV_h2, 
                           cold_CV_m2)
cold_CV_ratios$treatment <- "cold"

CV_ratios <- bind_rows(hot_CV_ratios, 
                       cold_CV_ratios)

ggplot(data = CV_ratios, aes(x = day, y = Estimate, colour = factor(treatment))) +
  geom_point(size = 2) + 
  #geom_errorbar(aes(min = Lower, max = Upper), width = 0, alpha = 0.5) + 
  geom_ribbon(aes(ymin = Lower, ymax = Upper), alpha = 0.05) +
  #geom_smooth(aes(ymin = Lower, ymax = Upper), stat = "identity", alpha = 0.1) +
  #geom_line() + 
  stat_smooth(method = "auto", se = F, size = 1) + 
  facet_wrap(~group_id, scales = "free_y") + 
  scale_x_continuous(breaks = seq(0, 500, 60)) + 
  #scale_colour_manual(values = c("#5BBCD6", "#F98400")) + 
  scale_colour_manual(values = c("#2790F3", "#F24D2A")) + 
  labs(x = "Age",
       y = "CV of h2/m2",
       #title = "Relative contribution of variance over age",
       colour =  "Treatment") + 
  theme_bw() + 
  my_theme +
  theme(legend.position = "none",
        strip.text = element_text(size = 18),
        strip.background = element_blank())
```


#### CHECK ALL BELOW ####
## Do growth trajectories differ among developmental temperatures?

To test for treatment differences in growth trajectories, we fitted four models with different combinations of treatment interactions with the linear and quadratic age parameters and compared their WAIC values (Table 1). The full model was best supported was model (Table S5), its G and M matrix is presented in Table S6 below. Model coefficients for the other three models are presented in Table S7-S9) 

```{r, echo = FALSE, include = FALSE}
#Compiling fixed effects coefficients for overall model testing for differences in growth curves
#Read in model output
brm_5.het <- readRDS("./output/rds/old_models/brm_5.het")

#Extract entire posterior
brm_5.het_post <- posterior_samples(brm_5.het)
#Names of each column
colnames(brm_5.het_post)[1:21]

#Combining the coefficients from the final model
#Getting the fixed effects
brm_5.fixed <- brm_5.het_post[,c(1,3,4,5,6,7)] %>% posterior_summary() %>% round(3) 
#Excluding est. error
brm_5.fixed <- brm_5.fixed[,c(1,3,4)]
```

```{r, echo = FALSE}
#Tabulating fixed effects
#Making a table
Table_5 <- brm_5.fixed %>% as.data.frame()
rownames(Table_5) <- c("Intercept", "Treatment", "Age",  "Age^2", "Treatment x Age","Treatment x Age^2")

#Creating a parameter variable and removing rownames
Table_5$Parameter <- rownames(Table_5)
rownames(Table_5) <- NULL
#Select the relevant columns
Table_5 <- select(Table_5, Parameter, Estimate:Q97.5)

#Output it nicely for ESM
pander(Table_5,
       split.cell = c(100,30,30,30),
       #split.table = Inf,
       justify = "lccc",
       caption = "Table S5 Coefficient estimates from full model testing the effects of developmental treatment on mass and how mass changes with age. Bolded estimates are significantly different from zero. * indicates that value is above zero prior to rounding. n_obs = 3002")
```

```{r, echo = FALSE, include = FALSE}
#Compiling G matrix for best supported model (5_het)
colnames(brm_5.het_post)[1:21]

#Calculate VAR from SD
G_sd_post <- posterior_samples(brm_5.het, "^sd_F1_Genotype")
G_var_post <- posterior_samples(brm_5.het, "^sd_F1_Genotype")^2
G_var_summary <- posterior_summary(G_var_post)[,-2] %>% round(3)

#Calculate COV from COR
G_cor_post <- posterior_samples(brm_5.het, "^cor_F1_Genotype")
G_cor_post
G_cor_summary <- posterior_summary(G_cor_post)[,-2] %>% signif(digits = 3)

G_cov_post <- cbind(G_cor_post[1] * (G_sd_post[1] * G_sd_post[2]), 
                  G_cor_post[2] * (G_sd_post[1] * G_sd_post[3]),
                  G_cor_post[3] * (G_sd_post[2] * G_sd_post[3]))
names(G_cov_post) <- str_replace(names(G_cor_post), "cor", "cov")
G_cov_summary <- posterior_summary(G_cov_post)[,-2] %>% signif(digits = 3)

#Tabulating
Table_6_G <- data.frame(matrix(nrow = 3, ncol = 3))
#Names
colnames(Table_6_G) <- rownames(Table_6_G) <-  c("Intercept", "Linear Slope", "Quadratic Slope")

#Fill in matrix - diagonals 
Table_6_G[1, 1] <- paste0(G_var_summary[1,1], " (", G_var_summary[1,2], " - ", G_var_summary[1,3], ")")
Table_6_G[2, 2] <- paste0(G_var_summary[2,1], " (", G_var_summary[2,2], " - ", G_var_summary[2,3], ")")
Table_6_G[3, 3] <- paste0(G_var_summary[3,1], " (", G_var_summary[3,2], " - ", G_var_summary[3,3], ")")

#upper off-diagonals - covariances
Table_6_G[1, 2] <- paste0(G_cov_summary[1,1], " (", G_cov_summary[1,2], " - ", G_cov_summary[1,3], ")")
Table_6_G[1, 3] <- paste0(G_cov_summary[2,1], " (", G_cov_summary[2,2], " - ", G_cov_summary[2,3], ")")
Table_6_G[2, 3] <- paste0(G_cov_summary[3,1], " (", G_cov_summary[3,2], " - ", G_cov_summary[3,3], ")")

#lower off diagonals - correlations 
Table_6_G[2, 1] <- paste0(G_cor_summary[1,1], " (", G_cor_summary[1,2], " - ", G_cor_summary[1,3], ")")
Table_6_G[3, 1] <- paste0(G_cor_summary[2,1], " (", G_cor_summary[2,2], " - ", G_cor_summary[2,3], ")")
Table_6_G[3, 2] <- paste0(G_cor_summary[3,1], " (", G_cor_summary[3,2], " - ", G_cor_summary[3,3], ")")

#write.csv(Table_6_G, "output/tabs/Table_6_G.csv")
```

```{r, echo = FALSE, include = FALSE}
#Compiling M matrix for best supported model (5_het)

#Calculate VAR from SD
M_sd_post <- posterior_samples(brm_5.het, "^sd_dam_id")
M_var_post <- posterior_samples(brm_5.het, "^sd_dam_id")^2
M_var_summary <- posterior_summary(M_var_post)[,-2] %>% round(3)

#Calculate COV from COR
M_cor_post <- posterior_samples(brm_5.het, "^cor_dam_id")
M_cor_summary <- posterior_summary(M_cor_post)[,-2] %>% signif(digits = 3)

M_cov_post <- cbind(M_cor_post[1] * (M_sd_post[1] * M_sd_post[2]), 
                  M_cor_post[2] * (M_sd_post[1] * M_sd_post[3]),
                  M_cor_post[3] * (M_sd_post[2] * M_sd_post[3]))
names(M_cov_post) <- str_replace(names(M_cor_post), "cor", "cov")
M_cov_summary <- posterior_summary(M_cov_post)[,-2] %>% signif(digits = 3)

#Tabulating
Table_6_M <- data.frame(matrix(nrow = 3, ncol = 3))
#Names
colnames(Table_6_M) <- rownames(Table_6_M) <- c("Intercept", "Linear Slope", "Quadratic Slope")

#Fill in matrix - diagonals 
Table_6_M[1, 1] <- paste0(M_var_summary[1,1], " (", M_var_summary[1,2], " - ", M_var_summary[1,3], ")")
Table_6_M[2, 2] <- paste0(M_var_summary[2,1], " (", M_var_summary[2,2], " - ", M_var_summary[2,3], ")")
Table_6_M[3, 3] <- paste0(M_var_summary[3,1], " (", M_var_summary[3,2], " - ", M_var_summary[3,3], ")")

#upper off-diagonals - covariances
Table_6_M[1, 2] <- paste0(M_cov_summary[1,1], " (", M_cov_summary[1,2], " - ", M_cov_summary[1,3], ")")
Table_6_M[1, 3] <- paste0(M_cov_summary[2,1], " (", M_cov_summary[2,2], " - ", M_cov_summary[2,3], ")")
Table_6_M[2, 3] <- paste0(M_cov_summary[3,1], " (", M_cov_summary[3,2], " - ", M_cov_summary[3,3], ")")

#lower off diagonals - correlations 
Table_6_M[2, 1] <- paste0(M_cor_summary[1,1], " (", M_cor_summary[1,2], " - ", M_cor_summary[1,3], ")")
Table_6_M[3, 1] <- paste0(M_cor_summary[2,1], " (", M_cor_summary[2,2], " - ", M_cor_summary[2,3], ")")
Table_6_M[3, 2] <- paste0(M_cor_summary[3,1], " (", M_cor_summary[3,2], " - ", M_cor_summary[3,3], ")")

#write.csv(Table_6_M, "output/tabs/Table_6_M.csv")

#PE
posterior_samples(brm_5.het, "^sd_id")^2 %>% posterior_summary() %>% signif(digits = 3)

#Residuals
posterior_samples(brm_5.het, "b_sigma_I")^2 %>% posterior_summary() %>% signif(digits = 3)
posterior_summary(brm_5.het, "b_sigma_z") %>% signif(digits = 3)

```

```{r, echo = FALSE, include = FALSE}
#Model coefficients of the other models
brm_5.1.het <- readRDS("./output/rds/brm_5.1.het")
brm_5.1.5.het <- readRDS("./output/rds/brm_5.1.5.het")
brm_5.2.het <- readRDS("./output/rds/brm_5.2.het")

#Posterior Summary for all coefficients
posterior_summary(brm_5.1.het)[1:20,] %>% round(3)
posterior_summary(brm_5.1.5.het)[1:20,] %>% round(3)
posterior_summary(brm_5.2.het)[1:19,] %>% round(3)
```

```{r, echo = FALSE}
#Creating Table 7
Table_7 <- posterior_summary(brm_5.1.het)[1:20,-2] %>% round(3) %>% as.data.frame()
#Setting row names
rownames(Table_7) <- c("Intercept", "Residual", "Treatment", "Age",  "Age^2", "Treatment x Age","Residual x Age",
                       "V_m intercept", "V_m  slope", "V_m curvature",
                       "V_pe",
                       "V_g intercept", "V_g slope", "V_g  curvature",
                       "Cor_m intercept - slope", "Cor_m intercept - curvature", "Cor_m slope - curvature",
                       "Cov_g intercept - slope", "Cov_g intercept - curvature", "Cov_g slope - curvature")

#Creating parameter variable and removing row names
Table_7$Parameter <- rownames(Table_7)
rownames(Table_7) <- NULL
#Selecting relevant columns
Table_7 <- select(Table_7, Parameter, Estimate:Q97.5)

#Outputting it nicely for ESM
pander(Table_7,
       split.cell = c(100,30,30,30),
       #split.table = Inf,
       justify = "lccc",
       caption = "Table S7 Coefficient estimates from model with interaction between treatment and age (linear growth rate) only. Bolded estimates are significantly different from zero. * indicates that value is above zero prior to rounding. n_obs = 3002")
```

```{r, echo = FALSE}
#Tabulating Table 8
Table_8 <- posterior_summary(brm_5.1.5.het)[1:20,-2] %>% round(3) %>% as.data.frame()
#Setting nice row names
rownames(Table_8) <- c("Intercept", "Residual", "Age", "Treatment",  "Age^2", "Treatment x Age^2","Residual x Age",
                       "V_m intercept", "V_m  slope", "V_m curvature",
                       "V_pe",
                       "V_g intercept", "V_g slope", "V_g  curvature",
                       "Cor_m intercept - slope", "Cor_m intercept - curvature", "Cor_m slope - curvature",
                       "Cov_g intercept - slope", "Cov_g intercept - curvature", "Cov_g slope - curvature")
#Creating parameter variable and removing row names
Table_8$Parameter <- rownames(Table_8)
rownames(Table_8) <- NULL
#Selecting relevant columns
Table_8 <- select(Table_8, Parameter, Estimate:Q97.5)
#Outputting it nicely for ESM
pander(Table_8,
       split.cell = c(100,30,30,30),
       #split.table = Inf,
       justify = "lccc",
       caption = "Table S8 Coefficient estimates from model with interaction between treatment and quadratic age paramater only. Bolded estimates are significantly different from zero. * indicates that value is above zero prior to rounding. n_obs = 3002")
```

```{r, echo = FALSE}
#Tabulating Table 9
Table_9 <- posterior_summary(brm_5.2.het)[1:19,-2] %>% round(3) %>% as.data.frame()
#Setting nice row names
rownames(Table_9) <- c("Intercept", "Residual", "Treatment", "Age",  "Age^2","Residual x Age",
                       "V_m intercept", "V_m  slope", "V_m curvature",
                       "V_pe",
                       "V_g intercept", "V_g slope", "V_g  curvature",
                       "Cor_m intercept - slope", "Cor_m intercept - curvature", "Cor_m slope - curvature",
                       "Cov_g intercept - slope", "Cov_g intercept - curvature", "Cov_g slope - curvature")
#Creating parameter variable and removing row names
Table_9$Parameter <- rownames(Table_9)
rownames(Table_9) <- NULL
#Selecting relevant columns
Table_9 <- select(Table_9, Parameter, Estimate:Q97.5)
#Outputting it nicely for ESM
pander(Table_9,
       split.cell = c(100,30,30,30),
       #split.table = Inf,
       justify = "lccc",
       caption = "Table S9 Coefficient estimates from model with main effects of treatment and age only. Bolded estimates are significantly different from zero. * indicates that value is above zero prior to rounding. n_obs = 3002")
```

## Egg mortality analysis

```{r, echo = FALSE, include = FALSE, eval = FALSE}
#Egg mortality analysis
egg_data <- read.csv("./data/egg_lizard/all_eggs.csv", stringsAsFactors = F)
# 
# str(egg_data)
# 
# #All the different egg status
# egg_data$egg_status %>% tabyl()
# 
# #Filter out Available and culled
# egg_mort_data <- egg_data %>% filter(egg_status == "DEAD" | egg_status == "HATCHED")
# str(egg_mort_data)
# 
# #Set date as data
# egg_mort_data %<>% mutate(egg_laid_date = dmy(egg_laid_date),
#                          liz_hatch_date = dmy(liz_hatch_date)) 
# 
# egg_mort_data %>% tabyl(egg_incub_temp, egg_status)
# 
# #Create binary variable mortaility
# egg_mort_data %<>% mutate(mortality = ifelse(egg_status == "HATCHED",1,0))

#write.csv(egg_mort_data, row.names = F, "data/egg_lizard/egg_mort.csv")

mort_model <- readRDS("./output/rds/mort_model")
#plot(mort_model)

posterior_summary(mort_model)[1:3,]
```

```{r, eval = TRUE, echo = FALSE, include = FALSE}
#If I don't account for individual variation in growth, do I get a treatment effect?
# mod.5.noid <- brm(lnMass ~ treatment*z_days_since_hatch + treatment*z_days_since_hatch_I2 + (1 | dam_id),
#                   family = gaussian(),
#                   data = data_DA, 
#                   chains = 4, cores = 4, iter = 4000, warmup = 1500, thin = 5,
#                   control = list(adapt_delta = 0.98))
# 
# saveRDS(mod.5.noid, "output/rds/mod.5.noid")

mod.5.noid <- readRDS("./output/rds/mod.5.noid")

Table_noID <- posterior_summary(mod.5.noid)[1:8,-2] %>% round(2)
```

## How does developmental temperatures affect growth when individual variation is not taken into account?

```{r, eval = TRUE, echo = TRUE, include = TRUE}
pander(Table_noID,
       split.cell = c(100,30,30,30),
       #split.table = Inf,
       justify = "lccc",
       caption = "Table S10, model coefficient testing")
```

```{r, eval = FALSE, echo = FALSE, include = FALSE}
#Format date and treatment
data_DA %<>% mutate(hatch_date = ymd(hatch_date),
                   egg_laid_date = ymd(egg_laid_date), 
                   incub_dur = as.numeric(hatch_date - egg_laid_date),
                   z_incub_dur = scale(incub_dur)[1])

a<- ggplot(data_DA, aes(x  = incub_dur, group = factor(treatment), fill = factor(treatment))) + 
  geom_density() 

b<-ggplot(data_DA, aes(x = factor(treatment), y = incub_dur)) + 
  geom_boxplot() 

c<-  ggplot(data_DA, aes(x = incub_dur, y = lnMass)) + 
  geom_point(aes(colour = factor(treatment)))

a + b + c

#There are lizards with incorrect treatment assignments
data_DA %>% filter(treatment == 23 & incub_dur < 40) %>% select(id, treatment, egg_laid_date, hatch_date, incub_dur, egg_mass) %>% distinct() #these should be hot lizards

data_DA %>% filter(treatment == 29 & incub_dur > 35 | incub_dur < 20) %>% select(id, treatment, egg_laid_date, hatch_date, incub_dur, , egg_mass) %>% distinct() 

#Ok the lizards with  much shorter incubation periods died soon after birth 
#ld0463, ld0453, ld0453 are all siblings, from the same clutch and for their given treatment, they hatched super early. They were from clutch c093, and were found under the water bowl and may explain why they have such high egg masses (I think this is mostly water). Maybe we should exclude this clutch entirely

data %>% filter(id %in% c("ld0463", "ld0453", "ld0452")) %>% nrow() #Ok we would only be losing 26 rows of data
data_DA %>% filter(id %in% c("ld0463", "ld0453", "ld0452")) %>% nrow() #Ok we would only be losing 45 rows of data

data_c <- data %>% filter(!id %in% c("ld0463", "ld0453", "ld0452"))
data_DA_c <- data_DA %>% filter(!id %in% c("ld0463", "ld0453", "ld0452")) 

#ld0551 is definitely an error, its sibling ld0552 also in hot treatment hatched on the same day

data_c %>% filter(id == "ld0551")
data_c %<>% mutate(treatment = ifelse(id == "ld0551", 29, data_c$treatment))
data_DA_c %<>% mutate(treatment = ifelse(id == "ld0551", 29, data_DA_c$treatment))

#ld0382 and ld0383 are siblings and their treatments must have been swapped at the start

data_c %>% filter(id == "ld0383")
data_c %<>% mutate(treatment = ifelse(id == "ld0382", 29, data_c$treatment))
data_DA_c %<>% mutate(treatment = ifelse(id == "ld0382", 29, data_DA_c$treatment))

data_c %<>% mutate(treatment = ifelse(id == "ld0383", 23, data_c$treatment))
data_DA_c %<>% mutate(treatment = ifelse(id == "ld0383", 23, data_DA_c$treatment))

# Summary of treatment and number of lizards and obs
data_c %>% nrow() 
lizards <- data_c %>% select(id, treatment) %>% distinct() 
lizards %>% tabyl(treatment)

ggplot(data_DA_c, aes(x  = incub_dur, group = factor(treatment), fill = factor(treatment))) + 
  geom_density() 

ggplot(data_DA_c, aes(x = factor(treatment), y = incub_dur)) + 
  geom_boxplot() 

ggplot(data_DA_c, aes(x = incub_dur, y = lnMass)) + 
  geom_point(aes(colour = factor(treatment)))

#Filter the data hot and cold for DA and cc data


#Write the data and track
#No DA
write.csv(data_c, row.names = F, "./data/growth/processed/analysis/Ldeli_quangen_growth.csv")

#DA
write.csv(data_DA, row.names = F, "./data/growth/processed/analysis/Ldeli_quangen_growth_DA.csv")

#Hot No DA
write.csv(data_c %>% filter(treatment== 29), row.names = F, "./data/growth/processed/analysis/HOT_quangen_growth_for_analysis.csv")

#Hot DA
write.csv(data_DA_c %>% filter(treatment== 29), row.names = F, "./data/growth/processed/analysis/HOT_quangen_growth_DA.csv")

#Cold No DA
write.csv(data_c %>% filter(treatment== 23), row.names = F, "./data/growth/processed/analysis/COLD_quangen_growth_for_analysis.csv")

#Cold DA
write.csv(data_DA_c %>% filter(treatment== 23), row.names = F, "./data/growth/processed/analysis/COLD_quangen_growth_DA.csv")


#Accounting for incubation duration 
hot_indur <- readRDS("./output/rds/hot_brm_5.5_incbd")
cold_indur <- readRDS("./output/rds/cold_brm_5.5_incbd")
```

